<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.12.0 on win32)" generated="20240227 09:37:50.590" rpa="false" schemaversion="4">
<suite id="s1" name="Rpa Project Copy" source="c:\Users\ELSAMA\OneDrive\Desktop\Invoice-Automation\Robot Validation\rpa_project copy.robot">
<test id="s1-t1" name="Process Invoice Data" line="66">
<kw name="Clear Existing Data">
<doc>Clear existing data from the database for testing purposes</doc>
<kw name="Make Connection">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>${dbname}</arg>
<arg>${dbuser}</arg>
<arg>${dbpass}</arg>
<arg>${dbhost}</arg>
<arg>${dbport}</arg>
<doc>Loads the DB API 2.0 module given ``dbapiModuleName`` then uses it to
connect to the database using provided parameters such as ``dbName``, ``dbUsername``, and ``dbPassword``.</doc>
<msg timestamp="20240227 09:37:50.721" level="INFO">Connecting using : pymysql.connect(db=rpa_db, user=robocop, passwd=***, host=localhost, port=3306, charset=None)</msg>
<status status="PASS" starttime="20240227 09:37:50.658" endtime="20240227 09:37:50.744"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.658" endtime="20240227 09:37:50.744"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${deleteRowsQuery}</var>
<arg>DELETE FROM invoicerow</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240227 09:37:50.744" level="INFO">${deleteRowsQuery} = DELETE FROM invoicerow</msg>
<status status="PASS" starttime="20240227 09:37:50.744" endtime="20240227 09:37:50.744"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${deleteRowsQuery}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.751" level="INFO">Executing : Execute SQL String  |  DELETE FROM invoicerow</msg>
<status status="PASS" starttime="20240227 09:37:50.744" endtime="20240227 09:37:50.765"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${deleteHeadersQuery}</var>
<arg>DELETE FROM invoiceheader</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240227 09:37:50.765" level="INFO">${deleteHeadersQuery} = DELETE FROM invoiceheader</msg>
<status status="PASS" starttime="20240227 09:37:50.765" endtime="20240227 09:37:50.768"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${deleteHeadersQuery}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.768" level="INFO">Executing : Execute SQL String  |  DELETE FROM invoiceheader</msg>
<status status="PASS" starttime="20240227 09:37:50.768" endtime="20240227 09:37:50.771"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.658" endtime="20240227 09:37:50.771"/>
</kw>
<kw name="Read CSV File">
<var>${headerLines}</var>
<arg>${HEADER_CSV}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${file_path}</var>
<arg>${filename}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20240227 09:37:50.773" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\ELSAMA\OneDrive\Desktop\Invoice-Automation\Robot Validation\InvoiceHeaderData.csv"&gt;C:\Users\ELSAMA\OneDrive\Desktop\Invoice-Automation\Robot Validation\InvoiceHeaderData.csv&lt;/a&gt;'.</msg>
<msg timestamp="20240227 09:37:50.773" level="INFO">${file_path} = ﻿InvoiceNumber;CompanyName;ReferenceNumber;InvoiceDate;DueDate;CompanyCode;BankAccountNumber;AmountExclVAT;VATAmount;TotalAmount
143143;Service Provider Oy;1431432;15.12.2022;07.04.2021;1234567-8;FI12...</msg>
<status status="PASS" starttime="20240227 09:37:50.773" endtime="20240227 09:37:50.773"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${file_path}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20240227 09:37:50.773" level="INFO">4 lines returned</msg>
<msg timestamp="20240227 09:37:50.773" level="INFO">@{lines} = [ ﻿InvoiceNumber;CompanyName;ReferenceNumber;InvoiceDate;DueDate;CompanyCode;BankAccountNumber;AmountExclVAT;VATAmount;TotalAmount | 143143;Service Provider Oy;1431432;15.12.2022;07.04.2021;1234567-8;...</msg>
<status status="PASS" starttime="20240227 09:37:50.773" endtime="20240227 09:37:50.773"/>
</kw>
<msg timestamp="20240227 09:37:50.773" level="INFO">${headerLines} = ['\ufeffInvoiceNumber;CompanyName;ReferenceNumber;InvoiceDate;DueDate;CompanyCode;BankAccountNumber;AmountExclVAT;VATAmount;TotalAmount', '143143;Service Provider Oy;1431432;15.12.2022;07.04.2021;1234...</msg>
<status status="PASS" starttime="20240227 09:37:50.771" endtime="20240227 09:37:50.773"/>
</kw>
<kw name="Read CSV File">
<var>${rowLines}</var>
<arg>${ROW_CSV}</arg>
<kw name="Get File" library="OperatingSystem">
<var>${file_path}</var>
<arg>${filename}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20240227 09:37:50.773" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\ELSAMA\OneDrive\Desktop\Invoice-Automation\Robot Validation\InvoiceRowData.csv"&gt;C:\Users\ELSAMA\OneDrive\Desktop\Invoice-Automation\Robot Validation\InvoiceRowData.csv&lt;/a&gt;'.</msg>
<msg timestamp="20240227 09:37:50.777" level="INFO">${file_path} = ﻿Description;Quantity;Unit;UnitPrice;VATPercent;VAT;Total;InvoiceNumber;RowNumber
Installation Services;5;h;60;24;72;372;143143;1
Replacement Products;10;kpl;105;24;252;1302;143143;2
Keyboard Logitech...</msg>
<status status="PASS" starttime="20240227 09:37:50.773" endtime="20240227 09:37:50.777"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${file_path}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20240227 09:37:50.777" level="INFO">9 lines returned</msg>
<msg timestamp="20240227 09:37:50.777" level="INFO">@{lines} = [ ﻿Description;Quantity;Unit;UnitPrice;VATPercent;VAT;Total;InvoiceNumber;RowNumber | Installation Services;5;h;60;24;72;372;143143;1 | Replacement Products;10;kpl;105;24;252;1302;143143;2 | Keyboard ...</msg>
<status status="PASS" starttime="20240227 09:37:50.777" endtime="20240227 09:37:50.777"/>
</kw>
<msg timestamp="20240227 09:37:50.777" level="INFO">${rowLines} = ['\ufeffDescription;Quantity;Unit;UnitPrice;VATPercent;VAT;Total;InvoiceNumber;RowNumber', 'Installation Services;5;h;60;24;72;372;143143;1', 'Replacement Products;10;kpl;105;24;252;1302;143143;2', 'K...</msg>
<status status="PASS" starttime="20240227 09:37:50.773" endtime="20240227 09:37:50.778"/>
</kw>
<for flavor="IN">
<var>${header}</var>
<value>@{headerLines[1:]}</value>
<iter>
<var name="${header}">143143;Service Provider Oy;1431432;15.12.2022;07.04.2021;1234567-8;FI12 3456 7890 1234 56;1350;324;1674</var>
<kw name="Insert Invoice Header To DB">
<arg>${header}</arg>
<kw name="Make Connection">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>${dbname}</arg>
<arg>${dbuser}</arg>
<arg>${dbpass}</arg>
<arg>${dbhost}</arg>
<arg>${dbport}</arg>
<doc>Loads the DB API 2.0 module given ``dbapiModuleName`` then uses it to
connect to the database using provided parameters such as ``dbName``, ``dbUsername``, and ``dbPassword``.</doc>
<msg timestamp="20240227 09:37:50.779" level="INFO">Connecting using : pymysql.connect(db=rpa_db, user=robocop, passwd=***, host=localhost, port=3306, charset=None)</msg>
<msg timestamp="20240227 09:37:50.784" level="WARN">Overwriting not closed connection.</msg>
<status status="PASS" starttime="20240227 09:37:50.779" endtime="20240227 09:37:50.785"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.779" endtime="20240227 09:37:50.786"/>
</kw>
<kw name="Split String" library="String">
<var>@{headerDetails}</var>
<arg>${header}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.786" level="INFO">@{headerDetails} = [ 143143 | Service Provider Oy | 1431432 | 15.12.2022 | 07.04.2021 | 1234567-8 | FI12 3456 7890 1234 56 | 1350 | 324 | 1674 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.786" endtime="20240227 09:37:50.786"/>
</kw>
<kw name="Is Reference Number Correct">
<var>${isRefCorrect}</var>
<arg>${headerDetails[2]}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${correct}</var>
<arg>len("${refNumber}") == 7 and "${refNumber}".isdigit()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240227 09:37:50.786" level="INFO">${correct} = True</msg>
<status status="PASS" starttime="20240227 09:37:50.786" endtime="20240227 09:37:50.786"/>
</kw>
<msg timestamp="20240227 09:37:50.786" level="INFO">${isRefCorrect} = True</msg>
<status status="PASS" starttime="20240227 09:37:50.786" endtime="20240227 09:37:50.786"/>
</kw>
<kw name="Is IBAN Correct">
<var>${ibanValid}</var>
<arg>${headerDetails[6]}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${correct}</var>
<arg>"${iban}"[:2].isalpha() and "${iban}"[:2].isupper() and len("${iban}") == 22</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240227 09:37:50.786" level="INFO">${correct} = True</msg>
<status status="PASS" starttime="20240227 09:37:50.786" endtime="20240227 09:37:50.786"/>
</kw>
<msg timestamp="20240227 09:37:50.786" level="INFO">${ibanValid} = True</msg>
<status status="PASS" starttime="20240227 09:37:50.786" endtime="20240227 09:37:50.786"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${statusOfInvoice}</var>
<arg>0 if ${isRefCorrect} and ${ibanValid} else 1 if not ${isRefCorrect} else 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240227 09:37:50.786" level="INFO">${statusOfInvoice} = 0</msg>
<status status="PASS" starttime="20240227 09:37:50.786" endtime="20240227 09:37:50.786"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${commentOfInvoice}</var>
<arg>${statusOfInvoice}==1</arg>
<arg>Reference number error</arg>
<arg>IBAN number error</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240227 09:37:50.786" level="INFO">${commentOfInvoice} = IBAN number error</msg>
<status status="PASS" starttime="20240227 09:37:50.786" endtime="20240227 09:37:50.786"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${commentOfInvoice}</var>
<arg>${statusOfInvoice}==0</arg>
<arg>All ok</arg>
<arg>${commentOfInvoice}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240227 09:37:50.786" level="INFO">${commentOfInvoice} = All ok</msg>
<status status="PASS" starttime="20240227 09:37:50.786" endtime="20240227 09:37:50.786"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoiceheader (invoicenumber, companyname, referencenumber, invoicedate, duedate, companycode, bankaccountnumber, amountexclvat, vat, totalamount, comment) VALUES ('${headerDetails[0]}', '${headerDetails[1]}', '${headerDetails[2]}', '${headerDetails[3]}', '${headerDetails[4]}', '${headerDetails[5]}', '${headerDetails[6]}', ${headerDetails[7]}, ${headerDetails[8]}, ${headerDetails[9]}, '${commentOfInvoice}')</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.793" level="INFO">${query} = INSERT INTO invoiceheader (invoicenumber, companyname, referencenumber, invoicedate, duedate, companycode, bankaccountnumber, amountexclvat, vat, totalamount, comment) VALUES ('143143', 'Service Provi...</msg>
<status status="PASS" starttime="20240227 09:37:50.786" endtime="20240227 09:37:50.793"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.793" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoiceheader (invoicenumber, companyname, referencenumber, invoicedate, duedate, companycode, bankaccountnumber, amountexclvat, vat, totalamount, comment) VALUES ('143143', 'Service Provider Oy', '1431432', '15.12.2022', '07.04.2021', '1234567-8', 'FI12 3456 7890 1234 56', 1350, 324, 1674, 'All ok')</msg>
<status status="PASS" starttime="20240227 09:37:50.793" endtime="20240227 09:37:50.799"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.779" endtime="20240227 09:37:50.799"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.779" endtime="20240227 09:37:50.799"/>
</iter>
<iter>
<var name="${header}">1543235;Component Oy;15432359;01.10.2022;15.10.2022;1234567-9;FI05 1234 5600 7891 01;465;111.6;576.6</var>
<kw name="Insert Invoice Header To DB">
<arg>${header}</arg>
<kw name="Make Connection">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>${dbname}</arg>
<arg>${dbuser}</arg>
<arg>${dbpass}</arg>
<arg>${dbhost}</arg>
<arg>${dbport}</arg>
<doc>Loads the DB API 2.0 module given ``dbapiModuleName`` then uses it to
connect to the database using provided parameters such as ``dbName``, ``dbUsername``, and ``dbPassword``.</doc>
<msg timestamp="20240227 09:37:50.802" level="INFO">Connecting using : pymysql.connect(db=rpa_db, user=robocop, passwd=***, host=localhost, port=3306, charset=None)</msg>
<msg timestamp="20240227 09:37:50.823" level="WARN">Overwriting not closed connection.</msg>
<status status="PASS" starttime="20240227 09:37:50.800" endtime="20240227 09:37:50.826"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.800" endtime="20240227 09:37:50.826"/>
</kw>
<kw name="Split String" library="String">
<var>@{headerDetails}</var>
<arg>${header}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.826" level="INFO">@{headerDetails} = [ 1543235 | Component Oy | 15432359 | 01.10.2022 | 15.10.2022 | 1234567-9 | FI05 1234 5600 7891 01 | 465 | 111.6 | 576.6 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.826" endtime="20240227 09:37:50.826"/>
</kw>
<kw name="Is Reference Number Correct">
<var>${isRefCorrect}</var>
<arg>${headerDetails[2]}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${correct}</var>
<arg>len("${refNumber}") == 7 and "${refNumber}".isdigit()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240227 09:37:50.828" level="INFO">${correct} = False</msg>
<status status="PASS" starttime="20240227 09:37:50.828" endtime="20240227 09:37:50.829"/>
</kw>
<msg timestamp="20240227 09:37:50.829" level="INFO">${isRefCorrect} = False</msg>
<status status="PASS" starttime="20240227 09:37:50.826" endtime="20240227 09:37:50.829"/>
</kw>
<kw name="Is IBAN Correct">
<var>${ibanValid}</var>
<arg>${headerDetails[6]}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${correct}</var>
<arg>"${iban}"[:2].isalpha() and "${iban}"[:2].isupper() and len("${iban}") == 22</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240227 09:37:50.829" level="INFO">${correct} = True</msg>
<status status="PASS" starttime="20240227 09:37:50.829" endtime="20240227 09:37:50.830"/>
</kw>
<msg timestamp="20240227 09:37:50.830" level="INFO">${ibanValid} = True</msg>
<status status="PASS" starttime="20240227 09:37:50.829" endtime="20240227 09:37:50.830"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${statusOfInvoice}</var>
<arg>0 if ${isRefCorrect} and ${ibanValid} else 1 if not ${isRefCorrect} else 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240227 09:37:50.830" level="INFO">${statusOfInvoice} = 1</msg>
<status status="PASS" starttime="20240227 09:37:50.830" endtime="20240227 09:37:50.830"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${commentOfInvoice}</var>
<arg>${statusOfInvoice}==1</arg>
<arg>Reference number error</arg>
<arg>IBAN number error</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240227 09:37:50.830" level="INFO">${commentOfInvoice} = Reference number error</msg>
<status status="PASS" starttime="20240227 09:37:50.830" endtime="20240227 09:37:50.830"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${commentOfInvoice}</var>
<arg>${statusOfInvoice}==0</arg>
<arg>All ok</arg>
<arg>${commentOfInvoice}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240227 09:37:50.830" level="INFO">${commentOfInvoice} = Reference number error</msg>
<status status="PASS" starttime="20240227 09:37:50.830" endtime="20240227 09:37:50.830"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoiceheader (invoicenumber, companyname, referencenumber, invoicedate, duedate, companycode, bankaccountnumber, amountexclvat, vat, totalamount, comment) VALUES ('${headerDetails[0]}', '${headerDetails[1]}', '${headerDetails[2]}', '${headerDetails[3]}', '${headerDetails[4]}', '${headerDetails[5]}', '${headerDetails[6]}', ${headerDetails[7]}, ${headerDetails[8]}, ${headerDetails[9]}, '${commentOfInvoice}')</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.835" level="INFO">${query} = INSERT INTO invoiceheader (invoicenumber, companyname, referencenumber, invoicedate, duedate, companycode, bankaccountnumber, amountexclvat, vat, totalamount, comment) VALUES ('1543235', 'Component Oy...</msg>
<status status="PASS" starttime="20240227 09:37:50.830" endtime="20240227 09:37:50.835"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.835" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoiceheader (invoicenumber, companyname, referencenumber, invoicedate, duedate, companycode, bankaccountnumber, amountexclvat, vat, totalamount, comment) VALUES ('1543235', 'Component Oy', '15432359', '01.10.2022', '15.10.2022', '1234567-9', 'FI05 1234 5600 7891 01', 465, 111.6, 576.6, 'Reference number error')</msg>
<status status="PASS" starttime="20240227 09:37:50.835" endtime="20240227 09:37:50.838"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.800" endtime="20240227 09:37:50.840"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.799" endtime="20240227 09:37:50.840"/>
</iter>
<iter>
<var name="${header}">153143;Service Provider Oy;1531439;15.12.2022;01.04.2021;1234567-8;FI12 3456 7890 1234 56;2700;648;3348</var>
<kw name="Insert Invoice Header To DB">
<arg>${header}</arg>
<kw name="Make Connection">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>${dbname}</arg>
<arg>${dbuser}</arg>
<arg>${dbpass}</arg>
<arg>${dbhost}</arg>
<arg>${dbport}</arg>
<doc>Loads the DB API 2.0 module given ``dbapiModuleName`` then uses it to
connect to the database using provided parameters such as ``dbName``, ``dbUsername``, and ``dbPassword``.</doc>
<msg timestamp="20240227 09:37:50.841" level="INFO">Connecting using : pymysql.connect(db=rpa_db, user=robocop, passwd=***, host=localhost, port=3306, charset=None)</msg>
<msg timestamp="20240227 09:37:50.844" level="WARN">Overwriting not closed connection.</msg>
<status status="PASS" starttime="20240227 09:37:50.841" endtime="20240227 09:37:50.844"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.841" endtime="20240227 09:37:50.844"/>
</kw>
<kw name="Split String" library="String">
<var>@{headerDetails}</var>
<arg>${header}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.847" level="INFO">@{headerDetails} = [ 153143 | Service Provider Oy | 1531439 | 15.12.2022 | 01.04.2021 | 1234567-8 | FI12 3456 7890 1234 56 | 2700 | 648 | 3348 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.844" endtime="20240227 09:37:50.847"/>
</kw>
<kw name="Is Reference Number Correct">
<var>${isRefCorrect}</var>
<arg>${headerDetails[2]}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${correct}</var>
<arg>len("${refNumber}") == 7 and "${refNumber}".isdigit()</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240227 09:37:50.847" level="INFO">${correct} = True</msg>
<status status="PASS" starttime="20240227 09:37:50.847" endtime="20240227 09:37:50.847"/>
</kw>
<msg timestamp="20240227 09:37:50.847" level="INFO">${isRefCorrect} = True</msg>
<status status="PASS" starttime="20240227 09:37:50.847" endtime="20240227 09:37:50.847"/>
</kw>
<kw name="Is IBAN Correct">
<var>${ibanValid}</var>
<arg>${headerDetails[6]}</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${correct}</var>
<arg>"${iban}"[:2].isalpha() and "${iban}"[:2].isupper() and len("${iban}") == 22</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240227 09:37:50.850" level="INFO">${correct} = True</msg>
<status status="PASS" starttime="20240227 09:37:50.847" endtime="20240227 09:37:50.850"/>
</kw>
<msg timestamp="20240227 09:37:50.850" level="INFO">${ibanValid} = True</msg>
<status status="PASS" starttime="20240227 09:37:50.847" endtime="20240227 09:37:50.850"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${statusOfInvoice}</var>
<arg>0 if ${isRefCorrect} and ${ibanValid} else 1 if not ${isRefCorrect} else 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240227 09:37:50.850" level="INFO">${statusOfInvoice} = 0</msg>
<status status="PASS" starttime="20240227 09:37:50.850" endtime="20240227 09:37:50.850"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${commentOfInvoice}</var>
<arg>${statusOfInvoice}==1</arg>
<arg>Reference number error</arg>
<arg>IBAN number error</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240227 09:37:50.850" level="INFO">${commentOfInvoice} = IBAN number error</msg>
<status status="PASS" starttime="20240227 09:37:50.850" endtime="20240227 09:37:50.850"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${commentOfInvoice}</var>
<arg>${statusOfInvoice}==0</arg>
<arg>All ok</arg>
<arg>${commentOfInvoice}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20240227 09:37:50.850" level="INFO">${commentOfInvoice} = All ok</msg>
<status status="PASS" starttime="20240227 09:37:50.850" endtime="20240227 09:37:50.850"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoiceheader (invoicenumber, companyname, referencenumber, invoicedate, duedate, companycode, bankaccountnumber, amountexclvat, vat, totalamount, comment) VALUES ('${headerDetails[0]}', '${headerDetails[1]}', '${headerDetails[2]}', '${headerDetails[3]}', '${headerDetails[4]}', '${headerDetails[5]}', '${headerDetails[6]}', ${headerDetails[7]}, ${headerDetails[8]}, ${headerDetails[9]}, '${commentOfInvoice}')</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.850" level="INFO">${query} = INSERT INTO invoiceheader (invoicenumber, companyname, referencenumber, invoicedate, duedate, companycode, bankaccountnumber, amountexclvat, vat, totalamount, comment) VALUES ('153143', 'Service Provi...</msg>
<status status="PASS" starttime="20240227 09:37:50.850" endtime="20240227 09:37:50.850"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.850" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoiceheader (invoicenumber, companyname, referencenumber, invoicedate, duedate, companycode, bankaccountnumber, amountexclvat, vat, totalamount, comment) VALUES ('153143', 'Service Provider Oy', '1531439', '15.12.2022', '01.04.2021', '1234567-8', 'FI12 3456 7890 1234 56', 2700, 648, 3348, 'All ok')</msg>
<status status="PASS" starttime="20240227 09:37:50.850" endtime="20240227 09:37:50.858"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.840" endtime="20240227 09:37:50.859"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.840" endtime="20240227 09:37:50.859"/>
</iter>
<status status="PASS" starttime="20240227 09:37:50.778" endtime="20240227 09:37:50.859"/>
</for>
<kw name="Insert Invoice Rows To DB">
<arg>@{rowLines[1:]}</arg>
<kw name="Make Connection">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>${dbname}</arg>
<arg>${dbuser}</arg>
<arg>${dbpass}</arg>
<arg>${dbhost}</arg>
<arg>${dbport}</arg>
<doc>Loads the DB API 2.0 module given ``dbapiModuleName`` then uses it to
connect to the database using provided parameters such as ``dbName``, ``dbUsername``, and ``dbPassword``.</doc>
<msg timestamp="20240227 09:37:50.862" level="INFO">Connecting using : pymysql.connect(db=rpa_db, user=robocop, passwd=***, host=localhost, port=3306, charset=None)</msg>
<msg timestamp="20240227 09:37:50.863" level="WARN">Overwriting not closed connection.</msg>
<status status="PASS" starttime="20240227 09:37:50.859" endtime="20240227 09:37:50.863"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.859" endtime="20240227 09:37:50.863"/>
</kw>
<for flavor="IN">
<var>${row}</var>
<value>@{rows}</value>
<iter>
<var name="${row}">Installation Services;5;h;60;24;72;372;143143;1</var>
<kw name="Split String" library="String">
<var>@{rowDetails}</var>
<arg>${row}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.867" level="INFO">@{rowDetails} = [ Installation Services | 5 | h | 60 | 24 | 72 | 372 | 143143 | 1 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.867" endtime="20240227 09:37:50.868"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('${rowDetails[7]}', '${rowDetails[8]}', '${rowDetails[0]}', ${rowDetails[1]}, '${rowDetails[2]}', ${rowDetails[3]}, ${rowDetails[4]}, ${rowDetails[5]}, ${rowDetails[6]})</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.868" level="INFO">${query} = INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('143143', '1', 'Installation Services', 5, 'h', 60, 24, 72, 372)</msg>
<status status="PASS" starttime="20240227 09:37:50.868" endtime="20240227 09:37:50.868"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.868" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('143143', '1', 'Installation Services', 5, 'h', 60, 24, 72, 372)</msg>
<status status="PASS" starttime="20240227 09:37:50.868" endtime="20240227 09:37:50.873"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.867" endtime="20240227 09:37:50.873"/>
</iter>
<iter>
<var name="${row}">Replacement Products;10;kpl;105;24;252;1302;143143;2</var>
<kw name="Split String" library="String">
<var>@{rowDetails}</var>
<arg>${row}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.875" level="INFO">@{rowDetails} = [ Replacement Products | 10 | kpl | 105 | 24 | 252 | 1302 | 143143 | 2 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.875" endtime="20240227 09:37:50.875"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('${rowDetails[7]}', '${rowDetails[8]}', '${rowDetails[0]}', ${rowDetails[1]}, '${rowDetails[2]}', ${rowDetails[3]}, ${rowDetails[4]}, ${rowDetails[5]}, ${rowDetails[6]})</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.875" level="INFO">${query} = INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('143143', '2', 'Replacement Products', 10, 'kpl', 105, 24, 252, 1302)</msg>
<status status="PASS" starttime="20240227 09:37:50.875" endtime="20240227 09:37:50.875"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.875" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('143143', '2', 'Replacement Products', 10, 'kpl', 105, 24, 252, 1302)</msg>
<status status="PASS" starttime="20240227 09:37:50.875" endtime="20240227 09:37:50.882"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.875" endtime="20240227 09:37:50.884"/>
</iter>
<iter>
<var name="${row}">Keyboard Logitech;10;kpl;40;24;96;496;1543235;1</var>
<kw name="Split String" library="String">
<var>@{rowDetails}</var>
<arg>${row}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.884" level="INFO">@{rowDetails} = [ Keyboard Logitech | 10 | kpl | 40 | 24 | 96 | 496 | 1543235 | 1 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.884" endtime="20240227 09:37:50.884"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('${rowDetails[7]}', '${rowDetails[8]}', '${rowDetails[0]}', ${rowDetails[1]}, '${rowDetails[2]}', ${rowDetails[3]}, ${rowDetails[4]}, ${rowDetails[5]}, ${rowDetails[6]})</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.888" level="INFO">${query} = INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('1543235', '1', 'Keyboard Logitech', 10, 'kpl', 40, 24, 96, 496)</msg>
<status status="PASS" starttime="20240227 09:37:50.884" endtime="20240227 09:37:50.888"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.890" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('1543235', '1', 'Keyboard Logitech', 10, 'kpl', 40, 24, 96, 496)</msg>
<status status="PASS" starttime="20240227 09:37:50.888" endtime="20240227 09:37:50.890"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.884" endtime="20240227 09:37:50.890"/>
</iter>
<iter>
<var name="${row}">Brother printer;1;kpl;65;24;15.6;80.6;1543235;2</var>
<kw name="Split String" library="String">
<var>@{rowDetails}</var>
<arg>${row}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.890" level="INFO">@{rowDetails} = [ Brother printer | 1 | kpl | 65 | 24 | 15.6 | 80.6 | 1543235 | 2 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.890" endtime="20240227 09:37:50.890"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('${rowDetails[7]}', '${rowDetails[8]}', '${rowDetails[0]}', ${rowDetails[1]}, '${rowDetails[2]}', ${rowDetails[3]}, ${rowDetails[4]}, ${rowDetails[5]}, ${rowDetails[6]})</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.890" level="INFO">${query} = INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('1543235', '2', 'Brother printer', 1, 'kpl', 65, 24, 15.6, 80.6)</msg>
<status status="PASS" starttime="20240227 09:37:50.890" endtime="20240227 09:37:50.890"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.899" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('1543235', '2', 'Brother printer', 1, 'kpl', 65, 24, 15.6, 80.6)</msg>
<status status="PASS" starttime="20240227 09:37:50.890" endtime="20240227 09:37:50.904"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.890" endtime="20240227 09:37:50.904"/>
</iter>
<iter>
<var name="${row}">Installation Services;5;h;60;24;72;372;153143;1</var>
<kw name="Split String" library="String">
<var>@{rowDetails}</var>
<arg>${row}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.905" level="INFO">@{rowDetails} = [ Installation Services | 5 | h | 60 | 24 | 72 | 372 | 153143 | 1 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.904" endtime="20240227 09:37:50.905"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('${rowDetails[7]}', '${rowDetails[8]}', '${rowDetails[0]}', ${rowDetails[1]}, '${rowDetails[2]}', ${rowDetails[3]}, ${rowDetails[4]}, ${rowDetails[5]}, ${rowDetails[6]})</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.907" level="INFO">${query} = INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('153143', '1', 'Installation Services', 5, 'h', 60, 24, 72, 372)</msg>
<status status="PASS" starttime="20240227 09:37:50.905" endtime="20240227 09:37:50.907"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.907" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('153143', '1', 'Installation Services', 5, 'h', 60, 24, 72, 372)</msg>
<status status="PASS" starttime="20240227 09:37:50.907" endtime="20240227 09:37:50.907"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.904" endtime="20240227 09:37:50.907"/>
</iter>
<iter>
<var name="${row}">Replacement Products;10;kpl;105;24;252;1302;153143;2</var>
<kw name="Split String" library="String">
<var>@{rowDetails}</var>
<arg>${row}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.907" level="INFO">@{rowDetails} = [ Replacement Products | 10 | kpl | 105 | 24 | 252 | 1302 | 153143 | 2 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.907" endtime="20240227 09:37:50.907"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('${rowDetails[7]}', '${rowDetails[8]}', '${rowDetails[0]}', ${rowDetails[1]}, '${rowDetails[2]}', ${rowDetails[3]}, ${rowDetails[4]}, ${rowDetails[5]}, ${rowDetails[6]})</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.917" level="INFO">${query} = INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('153143', '2', 'Replacement Products', 10, 'kpl', 105, 24, 252, 1302)</msg>
<status status="PASS" starttime="20240227 09:37:50.915" endtime="20240227 09:37:50.917"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.917" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('153143', '2', 'Replacement Products', 10, 'kpl', 105, 24, 252, 1302)</msg>
<status status="PASS" starttime="20240227 09:37:50.917" endtime="20240227 09:37:50.924"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.907" endtime="20240227 09:37:50.924"/>
</iter>
<iter>
<var name="${row}">Cleaning Services;5;h;60;24;72;372;153143;3</var>
<kw name="Split String" library="String">
<var>@{rowDetails}</var>
<arg>${row}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.925" level="INFO">@{rowDetails} = [ Cleaning Services | 5 | h | 60 | 24 | 72 | 372 | 153143 | 3 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.925" endtime="20240227 09:37:50.925"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('${rowDetails[7]}', '${rowDetails[8]}', '${rowDetails[0]}', ${rowDetails[1]}, '${rowDetails[2]}', ${rowDetails[3]}, ${rowDetails[4]}, ${rowDetails[5]}, ${rowDetails[6]})</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.926" level="INFO">${query} = INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('153143', '3', 'Cleaning Services', 5, 'h', 60, 24, 72, 372)</msg>
<status status="PASS" starttime="20240227 09:37:50.925" endtime="20240227 09:37:50.926"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.926" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('153143', '3', 'Cleaning Services', 5, 'h', 60, 24, 72, 372)</msg>
<status status="PASS" starttime="20240227 09:37:50.926" endtime="20240227 09:37:50.926"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.924" endtime="20240227 09:37:50.926"/>
</iter>
<iter>
<var name="${row}">Cleaning Wipes;10;kpl;105;24;252;1302;153143;4</var>
<kw name="Split String" library="String">
<var>@{rowDetails}</var>
<arg>${row}</arg>
<arg>;</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240227 09:37:50.934" level="INFO">@{rowDetails} = [ Cleaning Wipes | 10 | kpl | 105 | 24 | 252 | 1302 | 153143 | 4 ]</msg>
<status status="PASS" starttime="20240227 09:37:50.926" endtime="20240227 09:37:50.934"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${query}</var>
<arg>SEPARATOR=</arg>
<arg>INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('${rowDetails[7]}', '${rowDetails[8]}', '${rowDetails[0]}', ${rowDetails[1]}, '${rowDetails[2]}', ${rowDetails[3]}, ${rowDetails[4]}, ${rowDetails[5]}, ${rowDetails[6]})</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20240227 09:37:50.935" level="INFO">${query} = INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('153143', '4', 'Cleaning Wipes', 10, 'kpl', 105, 24, 252, 1302)</msg>
<status status="PASS" starttime="20240227 09:37:50.934" endtime="20240227 09:37:50.935"/>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<arg>${query}</arg>
<doc>Executes the ``sqlString`` as a single SQL command.</doc>
<msg timestamp="20240227 09:37:50.935" level="INFO">Executing : Execute SQL String  |  INSERT INTO invoicerow (invoicenumber, rownumber, description, quantity, unit, unitprice, vatpercent, vat, total) VALUES ('153143', '4', 'Cleaning Wipes', 10, 'kpl', 105, 24, 252, 1302)</msg>
<status status="PASS" starttime="20240227 09:37:50.935" endtime="20240227 09:37:50.939"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.926" endtime="20240227 09:37:50.941"/>
</iter>
<status status="PASS" starttime="20240227 09:37:50.867" endtime="20240227 09:37:50.941"/>
</for>
<status status="PASS" starttime="20240227 09:37:50.859" endtime="20240227 09:37:50.942"/>
</kw>
<status status="PASS" starttime="20240227 09:37:50.658" endtime="20240227 09:37:50.942"/>
</test>
<status status="PASS" starttime="20240227 09:37:50.601" endtime="20240227 09:37:50.944"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Rpa Project Copy">Rpa Project Copy</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20240227 09:37:50.784" level="WARN">Overwriting not closed connection.</msg>
<msg timestamp="20240227 09:37:50.823" level="WARN">Overwriting not closed connection.</msg>
<msg timestamp="20240227 09:37:50.844" level="WARN">Overwriting not closed connection.</msg>
<msg timestamp="20240227 09:37:50.863" level="WARN">Overwriting not closed connection.</msg>
</errors>
</robot>
